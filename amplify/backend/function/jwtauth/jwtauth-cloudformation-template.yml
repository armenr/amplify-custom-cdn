AWSTemplateFormatVersion: 2010-09-09
Description: Lambda Function resource stack creation using Amplify CLI
Parameters:
    CloudWatchRule:
        Type: String
        Default: NONE
        Description: " Schedule Expression"
    deploymentBucketName:
        Type: String
    env:
        Type: String
    s3Key:
        Type: String
    authtestcdn1312a87fUserPoolId:
        Type: String
        Default: authtestcdn1312a87fUserPoolId
    storagetestappmediaBucketName:
        Type: String
        Default: storagetestappmediaBucketName
Conditions:
    ShouldNotCreateEnvResources: !Equals
        - !Ref env
        - NONE
Resources:
    LambdaFunction:
        Type: "AWS::Lambda::Function"
        Metadata:
            "aws:asset:path": ./src
            "aws:asset:property": Code
        Properties:
            Code:
                S3Bucket: !Ref deploymentBucketName
                S3Key: !Ref s3Key
            Handler: index.handler
            FunctionName: !If
                - ShouldNotCreateEnvResources
                - jwtauth
                - !Join
                  - ""
                  - - jwtauth
                    - "-"
                    - !Ref env
            Environment:
                Variables:
                    ENV: !Ref env
                    REGION: !Ref "AWS::Region"
                    AUTH_TESTCDN1312A87F_USERPOOLID: !Ref authtestcdn1312a87fUserPoolId
                    STORAGE_TESTAPPMEDIA_BUCKETNAME: !Ref storagetestappmediaBucketName
            Role: !GetAtt
                - LambdaExecutionRole
                - Arn
            Runtime: nodejs12.x
            Layers: []
            Timeout: "25"
    LambdaExecutionRole:
        Type: "AWS::IAM::Role"
        Properties:
            RoleName: !If
                - ShouldNotCreateEnvResources
                - testcdnLambdaRole804874ed
                - !Join
                  - ""
                  - - testcdnLambdaRole804874ed
                    - "-"
                    - !Ref env
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Principal:
                          Service:
                              - lambda.amazonaws.com
                              - edgelambda.amazonaws.com
                      Action:
                          - "sts:AssumeRole"
    lambdaexecutionpolicy:
        DependsOn:
            - LambdaExecutionRole
        Type: "AWS::IAM::Policy"
        Properties:
            PolicyName: lambda-execution-policy
            Roles:
                - !Ref LambdaExecutionRole
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Action:
                          - "logs:CreateLogGroup"
                          - "logs:CreateLogStream"
                          - "logs:PutLogEvents"
                      Resource: !Sub
                          - >-
                              arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*
                          - region: !Ref "AWS::Region"
                            account: !Ref "AWS::AccountId"
                            lambda: !Ref LambdaFunction
    AmplifyResourcesPolicy:
        DependsOn:
            - LambdaExecutionRole
        Type: "AWS::IAM::Policy"
        Properties:
            PolicyName: amplify-lambda-execution-policy
            Roles:
                - !Ref LambdaExecutionRole
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Action:
                          - "cognito-identity:Describe*"
                          - "cognito-identity:Get*"
                          - "cognito-identity:List*"
                          - "cognito-idp:Describe*"
                          - "cognito-idp:AdminGetDevice"
                          - "cognito-idp:AdminGetUser"
                          - "cognito-idp:AdminList*"
                          - "cognito-idp:List*"
                          - "cognito-sync:Describe*"
                          - "cognito-sync:Get*"
                          - "cognito-sync:List*"
                          - "iam:ListOpenIdConnectProviders"
                          - "iam:ListRoles"
                          - "sns:ListPlatformApplications"
                      Resource:
                          - !Join
                            - ""
                            - - "arn:aws:cognito-idp:"
                              - !Ref "AWS::Region"
                              - ":"
                              - !Ref "AWS::AccountId"
                              - ":userpool/"
                              - !Ref authtestcdn1312a87fUserPoolId
                    - Effect: Allow
                      Action: "s3:ListBucket"
                      Resource:
                          - !Join
                            - ""
                            - - "arn:aws:s3:::"
                              - !Ref storagetestappmediaBucketName
                    - Effect: Allow
                      Action:
                          - "s3:GetObject"
                      Resource:
                          - !Join
                            - ""
                            - - "arn:aws:s3:::"
                              - !Ref storagetestappmediaBucketName
                              - /*
Outputs:
    Name:
        Value: !Ref LambdaFunction
    Arn:
        Value: !GetAtt
            - LambdaFunction
            - Arn
    Region:
        Value: !Ref "AWS::Region"
    LambdaExecutionRole:
        Value: !Ref LambdaExecutionRole
